# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'

    # postgresql
    database_driver: '%env(DATABASE_DRIVER)%'
    database_host: '%env(DATABASE_HOST)%'
    database_port: '%env(DATABASE_PORT)%'
    database_name: '%env(DATABASE_NAME)%'
    database_user: '%env(DATABASE_USER)%'
    database_password: '%env(DATABASE_PASSWORD)%'
    server_version: '%env(SERVER_VERSION)%'

    root_path: '%kernel.project_dir%/public'

    # telegram
    tg_token: '%env(TG_TOKEN)%'
    tg_url: 'https://api.telegram.org/bot'

    # bitrix24
    bitrix24_api: '%env(BITRIX24_API)%'
    bitrix24_user_id: '%env(BITRIX24_USER_ID)%'
    bitrix24_url: 'https://intaro.bitrix24.ru/rest/'

    # google сервис-аккаунт
    # intarobot@intarocalendar-1542704954867.iam.gserviceaccount.com

    # proxy
    proxy_name: '%env(PROXY_NAME)%'
    proxy_port: '%env(PROXY_PORT)%'
    proxy_logpass: '%env(PROXY_LOGPASS)%'

    # work_time
    work_time_start: '08:00'
    work_time_end: '20:00'
    # насколько дней вперед максимум можно забронировать
    date_range: 30

    # meeting_room
    # У гугла максимальная длина заголовка 1024, а описания (где хранятся списки участников) 16384
    # пользовательский ввод
    meeting_room_event_name_len: 128;

    # 1 участник ~200 байт (1 участинк - 1 элемент массива со свойствами)
    # организатор не входит в список, но учитывается вместе с остальными в базе
    # (10 участников + 1 организатор) * ~200 байт = string 2200 байт необходимо для столбца в базе
    meeting_room_event_members_limit: 10
    # Длина имени и фамилии одного участника. Например $name = "Иван Иванов (НЛМК)"; strlen($name) == 18;
    meeting_room_event_members_len: 50;

    # Оповещение за хх мин. до начала события
    notification_time: 30

    # cache
    cache_time_google_calendar: 300
    cache_google_calendar: 'cache_google_calendar'
    cache_time_bitrix24: 86400
    cache_bitrix24: 'cache_bitrix24'

    # анти-флуд
    # сообщений в минуту
    # это касается сообщений больше 512 байт
    anti_flood_allowed_messages_number: 29

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed

    App\Service\TelegramAPI:
        arguments:
            $tgUrl: '%tg_url%'
            $tgToken: '%env(TG_TOKEN)%'
            $proxy:
            - '%env(PROXY_NAME)%'
            - '%env(PROXY_PORT)%'
            - '%env(PROXY_LOGPASS)%'

    App\Service\Bitrix24API:
        arguments:
            $bitrix24Url: '%bitrix24_url%'
            $bitrix24UserId: '%env(BITRIX24_USER_ID)%'
            $bitrix24Api: '%env(BITRIX24_API)%'
            $cacheTime: '%cache_time_bitrix24%'
            $cacheContainer: '%cache_bitrix24%'

    App\Service\GoogleCalendarAPI:
        arguments:
            $notificationTime: '%notification_time%'
            $cacheTime: '%cache_time_google_calendar%'
            $cacheContainer: '%cache_google_calendar%'
            $dateRange: '%date_range%'