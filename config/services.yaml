# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'

    # postgresql
    database_driver: '%env(PDO_DRIVER)%'
    database_host: '%env(PDO_HOST)%'
    database_port: '%env(PDO_PORT)%'
    database_name: '%env(PDO_NAME)%'
    database_user: '%env(PDO_USER)%'
    database_password: '%env(PDO_PASSWORD)%'
    server_version: '%env(SERVER_VERSION)%'

    root_path: '%kernel.project_dir%/public'

    # work_time
    work_time_start: '08:00'
    work_time_end: '20:00'
    # насколько дней вперед максимум можно забронировать
    date_range: '30'

    # запись становится неактуальной через 30 мин
    meeting_room_actual_date: 30

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed

    App\Service\TelegramAPI:
        arguments:
            $tgToken: '%env(TG_TOKEN)%'
            $proxy:
                - '%env(PROXY_NAME)%'
                - '%env(PROXY_PORT)%'
                - '%env(PROXY_LOGPASS)%'

    App\Service\TelegramDb:
        arguments:
            $roomActualDate: '%meeting_room_actual_date%'

    App\Service\Bitrix24API:
        arguments:
            $bitrix24UserId: '%env(BITRIX24_USER_ID)%'
            $bitrix24Api: '%env(BITRIX24_API)%'

    App\Service\Calendar:
        arguments:
            $fileName: '%kernel.project_dir%/public/eventlist.txt'

    App\Service\GoogleCalendarAPI:
        arguments:
            $token: '%env(GOOGLE_TOKEN)%'